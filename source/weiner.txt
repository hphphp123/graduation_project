% 下面为后wiener滤波
frameL=256; % 定义帧长
len=length(e);
se=zeros(1,len);
sv=zeros(1,len);
se_g=zeros(1,len);
sv_g=zeros(1,len);
M=33;
Rx=zeros(M);
Rs=zeros(M,1);
x1=x1';x2=x2';x3=x3';x4=x4';d=d';
for n=1:fix(len/frameL*2-1)
        Y1=fft([x1((n-1)*frameL/2+1:n*frameL/2+frameL/2).*hanning(frameL)',zeros(1,frameL)]);
        Y2=fft([x2((n-1)*frameL/2+1:n*frameL/2+frameL/2).*hanning(frameL)',zeros(1,frameL)]);
        Y3=fft([x3((n-1)*frameL/2+1:n*frameL/2+frameL/2).*hanning(frameL)',zeros(1,frameL)]);
        Y4=fft([x4((n-1)*frameL/2+1:n*frameL/2+frameL/2).*hanning(frameL)',zeros(1,frameL)]);
        Ys=fft([e((n-1)*frameL/2+1:n*frameL/2+frameL/2).*hanning(frameL)',zeros(1,frameL)]);
    
    
        A=1/4.*(Y1.*conj(Y1)+Y2.*conj(Y2)+Y3.*conj(Y3)+Y4.*conj(Y4));
        C=1/6.*(Y1.*conj(Y2)+Y1.*conj(Y3)+Y1.*conj(Y4)+Y2.*conj(Y3)+Y2.*conj(Y4)+Y3.*conj(Y4));

        W1=C./A;  % 此处按wiener滤波原型计算
        SE1=W1.*Ys;
        se1=real(ifft(SE1));
        se11=se1(1:frameL);
        sv((n-1)*frameL/2+1:n*frameL/2+frameL/2)=se11;
        se=se+sv;
        sv=zeros(1,len);
        % 以下是文章的方法
        a=real(ifft(A));
        rr=a(1:M);          

        for i=1:M
            for j=1:M
                t=abs(i-j);
                Rx(i,j)=rr(t+1);
            end
        end
        %Rx=Rx/M;    % Rx 为含噪信号的相关阵 
        Cij=real(C);
        CC=Cij;
        V=Cij;
        I=find(Cij<0);
        Cij(I)=0;
        J=find(Cij>0);
        V(J)=0;
        alpha=Cij.*Cij./(Cij.*Cij+1/6*V);
        P=alpha.*CC;
        c=real(ifft(P));
        Rs=c(1:M)';
        w=inv(Rx)*Rs;
        B=0;
        se1=filter(B,w',e((n-1)*frameL/2+1:n*frameL/2+frameL/2).*hanning(frameL)');
        sv_g((n-1)*frameL/2+1:n*frameL/2+frameL/2)=se11;
        se_g=se_g+sv_g;
        sv_g=zeros(1,len);
        
    end